name = "walkingUpstairs"
else if(number == 3)
name = "walkingDownstairs"
else if(number == 4)
name = "sitting"
else if(number == 5)
name = "standing"
else if(number == 6)
name = "laying"
name
}
bigY <- mutate(bigY, activity = changeNames(activity))
bigY <- rbind(train_y, test_y)
bigY <- mutate(bigY, activity = activity ** 2)
bigY <- mutate(bigY, activity = activity^2)
names(bigY) <- "activity"
bigY <- mutate(bigY, activity = activity^2)
bigY
lapply(bigY$activity, sqrt)
lapply(bigY$activity, changeNames)
bigY <- rbind(train_y, test_y)
names(bigY) <- "activity"
temp <- bigY[1:10, ]
temp
changeNames(temp)
for(i in temp){}
for(i in temp){changeNames(i)}
changeNames <- function(number){
name = NULL
if(number == 1)
name = "walking"
else if(number == 2)
name = "walkingUpstairs"
else if(number == 3)
name = "walkingDownstairs"
else if(number == 4)
name = "sitting"
else if(number == 5)
name = "standing"
else if(number == 6)
name = "laying"
name
}
for(i in temp){changeNames(i)}
temp2 <- for(i in temp){changeNames(i)}
temp2
for(i in temp){print(changeNames(i))}
sapply(temp, changeNames)
bigY <- sapply(bigY, changeNames)
bigY <- rbind(train_y, test_y)
bigY <- sapply(bigY, changeNames)
for(i in bigY){
print(changeNames(i))
}
bigY <- rbind(train_y, test_y)
for(i in bigY){
print(changeNames(i))
}
bigY <- rbind(train_y, test_y)
dim(bigY)
for(i in bigY[1, nrow(bigY)]){
print(changeNames(i))
}
for(i in bigY[1, nrow(bigY)]){
print(changeNames(i))
}
nrow(bigY)
for(i in bigY[1, nrow(bigY)]){
print(i)
print(changeNames(i))
}
for(i in nrow(bigY)]){
print(i)
print(changeNames(i))
}
for(i in nrow(bigY)){
print(i)
print(changeNames(i))
}
for(i in seq(nrow(bigY)){
for(i in seq(nrow(bigY))){
print(i)
print(changeNames(i))
}
print(changeNames(bigY[i]))
for(i in seq(nrow(bigY))){
print(i)
print(changeNames(bigY[i]))
}
bigY <- rbind(train_y, test_y)
bigY[10]
bigY[10,]
for(i in seq(nrow(bigY))){
print(i)
print(changeNames(bigY[i,]))
}
for(i in seq(nrow(bigY))){
bigY[i, ] <- changeNames(bigY[i,])
}
bigY
len(wich(is.null(bigY)))
lenght(wich(is.null(bigY)))
length(wich(is.null(bigY)))
length(which(is.null(bigY)))
length(which(!is.null(bigY)))
length(which(is.null(bigY[,])))
length(which(is.null(bigY)))
head(bigY)
bigX <- rbind(train_x, test_x)
bigY <- rbind(train_y, test_y)
colNames <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(bigX) <- colNames[, 2]
bigX <- select(bigX, contains(c("mean", "std")))
names(bigY) <- "activity"
changeNames <- function(number){
name = NULL
if(number == 1)
name = "walking"
else if(number == 2)
name = "walkingUpstairs"
else if(number == 3)
name = "walkingDownstairs"
else if(number == 4)
name = "sitting"
else if(number == 5)
name = "standing"
else if(number == 6)
name = "laying"
name
}
for(i in seq(nrow(bigY))){
bigY[i, ] <- changeNames(bigY[i,])
}
feature_names <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(features_names) <- c("featureNumber", "featureName")
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
features_names(bigX) <- colNames[, 2]
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(bigX) <- features_names[, 2]
bigX <- rbind(train_x, test_x)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(bigX) <- features_names[, 2]
bigX <- select(bigX, contains(c("mean", "std")))
colnames(features_names)
colnames(features_names) <- c("featureNumber", "featureName")
names(feature_names)
colnames(features_names) <- c("featureNumber", "featureName")
colnames(features_names)
temp <- c(1, 2, 3)
sapply(temp, print)
sapply(temp, print)
sapply(temp, sqrt)
bigY <- rbind(train_y, test_y)
names(bigY) <- "activity"
bigY <- sapply(bigY$activity, changeNames)
bigY
dim(bigY)
length(bigY)
names(bigY)
names(features_names) <- c("featureNumber", "featureName")
features_names %>%
features_names %>%
select(contains(c("mean", "std"))) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("()", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
names(features_names) <- c("featureNumber", "featureName")
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
features_names %>%
features_names %>%
select(contains(c("mean", "std"))) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("()", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
features_names
head(feature_names)
head(features_names)
select(features_names, contains(c("mean", "std")))
temp <- c("hola", "bebe")
c("hola", "que") %in% temp
"hola" %in% temp
which("hola" == temp)
which("hola" %in% temp)
whichl("hola" %in% temp)
grep("hola", temp)
grepl("hola", temp)
grepl(c("hola", "que"), temp)
filter(feature_names, grepl("mean", featureName))
names(features_names) <- c("featureNumber", "featureName")
filter(feature_names, grepl("mean", featureName))
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
filter(features_names, grepl("mean", featureName))
nrow(filter(features_names, grepl("mean", featureName)))
nrow(filter(features_names, grepl("mean", featureName) | grepl("std", features_names)))
nrow(filter(features_names, grepl("mean", featuresName) | grepl("std", features_names)))
nrow(filter(features_names, grepl("mean", featureName) | grepl("std", featureName)))
ncol(bigX)
rm(feature_names)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
nrow(filter(features_names, grepl("mean", featureName) | grepl("std", featureName)))
bigX <- rbind(train_x, test_x)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(bigX) <- features_names[, 2]
bigX <- select(bigX, contains(c("mean", "std")))
dim(bigX)
length(which("mean" %in% features_names$V2))
length(which("mean" %in% features_names[, 2]))
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
length(which("mean" %in% features_names$featureName))
length(which("std" %in% features_names$featureName))
which("std" %in% features_names$featureName)
features_names$featureName
bigX <- select(bigX, contains(c("mean()", "std()")))
ncol(bigX)
grepl(mean|std(), features_names$featureName)
grepl("mean|std()", features_names$featureName)
grep("mean|std()", features_names$featureName)
length(grep("mean|std()", features_names$featureName))
length(grep("mean|std()", features_names$featureName))
library(stringi)
stri_detect_regex("mean|std()", "mean")
stri_detect_regex("mean|std\(\)", "mean")
stri_detect_regex("mean|std\\(\\)", "mean")
stri_detect_regex("mean|std\\(\\)", "std")
stri_detect_regex("mean()|std()", "std")
stri_detect_regex("mean\\()|std\\()", "std")
stri_detect_regex("mean\\(\\)|std\\()", "std")
stri_detect_regex("()", "std")
stri_detect_regex("()", "(")
stri_detect_regex("()", "()")
stri_detect_regex("\\(\\)", "()")
stri_detect_regex("\\(\\)", "(")
stri_detect_regex("\\(\\)", "\\(")
stri_detect_regex("mean()", "(")
stri_detect_regex("mean()", "mean")
stri_detect_regex("mean\(\)", "mean")
stri_detect_regex("mean\\(\)", "mean")
stri_detect_regex("mean\\(\\)", "mean")
stri_detect_regex("mean\\(\\)$", "mean")
stri_detect_regex("mean\(\)", "mean")
stri_detect_regex("mean\\(\\)", "mean")
stri_detect_regex("^mean\\(\\)$", "mean")
stri_detect_regex("^mean'('')'$", "mean")
"mean()" %in% "mean"
"mean()" %in% "mean()"
"mean()" %in% c("mean()", "sts")
which("mean()" %in% c("mean()", "sts"))
which("mean()" %in% c("mean()", "sts"))
temp <- c(1, 2, 3)
temp2 <- c(1, 2, 4)
merhe(temp, temp2)
merge(temp, temp2)
join(temp, temp2)
which("mean()" %in% c("mean()", "sts"))
which("mean()" %in% c("mean()", "sts"), arr.ind = T)
which("mean()" %in% c("mean()", "sts"), arr.ind = F)
?which
?cointains
?cointain
??contains
temp<- c("mean", "mean(", "mean()")
grepl("mean\\(\\)", temp)
nrow(filter(features_names, featureName = grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)))
nrow(filter(features_names, featureName = grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)))
features_names$featureName
nrow(filter(features_names, featureName = grepl("mean\\(\\)", featureName) | grepl("std\\(\\)", featureName)))
filter(features_names, featureName = grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName))
filter(features_names, featureName = grepl("mean\\(\\)", featureName))
filter(features_names, grepl("mean\\(\\)", featureName))
nrow(filter(features_names, grepl("mean\\(\\)", featureName) | grepl("std\\(\\)", featureName)))
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
features_names %>%
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("()", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
features_names %>%
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
# mutate(featureName = gsub("-", "", featureName)) %>%
# mutate(featureName = gsub("()", "", featureName)) %>%
# mutate(featureName = sub("^t", "time", featureName)) %>%
# mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
# mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
# mutate(featureName = tolower(featureName))
#features_names %>% features_names %>% mutate(featureName = str)
dataset <- cbind(bigX, bigY)
features_names %>%
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
dim(features_names)
nrow(features_names)
features_names
features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
dim(features_names)
names(bigX) <- features_names
names(bigX)
features_names
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
names(features_names) <- c("featureNumber", "featureName")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) #%>%
features_names
head(features_names)
head(gsub("-", "", features_names))
gsub("-", "", "isjisj-sjisios")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("()", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
head(features_names)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("\\(\\)", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
head(features_names)
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("\\(\\)", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) #%>%
head(features_names)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
names(features_names) <- c("featureNumber", "featureName")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("\\(\\)", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) #%>%
head(features_names)
bigX
dim(bigX)
as_tibble(bugX)
as_tibble(bigX)
temp <- as_tibble(bigX)
rm(list = ls())
#En este script se ven algunas funciones que le podemos aplicar a cadenas
if(!file.exists("./data")){
dir.create("./data")
}
library(zip)
library(dplyr)
library(tibble)
#Creating the 'data' folder
if(!file.exists("./data")){dir.create("./data")}
#Downloading and unzipping the data
if(!file.exists("./data/zipdata.zip")){
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, "./data/zipdata.zip")
unzip("./data/zipdata.zip", exdir = "./data")
}
#1. Merges the training and the test sets to create one data set.
test_x <- read.table("./data/UCI HAR Dataset/test/X_test.txt",
colClasses = "numeric")
train_x <- read.table("./data/UCI HAR Dataset/train/X_train.txt",
colClasses = "numeric")
test_y <- read.table("./data/UCI HAR Dataset/test/y_test.txt",
colClasses = "numeric")
train_y <- read.table("./data/UCI HAR Dataset/train/y_train.txt",
colClasses = "numeric")
bigX <- rbind(train_x, test_x)
bigY <- rbind(train_y, test_y)
features_names <- read.table("./data/UCI HAR Dataset/features.txt")
colnames(bigX) <- features_names[, 2]
bigX <- select(bigX, contains(c("mean()", "std()")))
names(bigY) <- "activity"
changeNames <- function(number){
name = NULL
if(number == 1)
name = "walking"
else if(number == 2)
name = "walkingUpstairs"
else if(number == 3)
name = "walkingDownstairs"
else if(number == 4)
name = "sitting"
else if(number == 5)
name = "standing"
else if(number == 6)
name = "laying"
name
}
bigY <- sapply(bigY$activity, changeNames)
names(features_names) <- c("featureNumber", "featureName")
features_names <- features_names %>%
filter(grepl("mean\\(\\)", featureName) |
grepl("std\\(\\)", featureName)) %>%
mutate(featureName = gsub("-", "", featureName)) %>%
mutate(featureName = gsub("\\(\\)", "", featureName)) %>%
mutate(featureName = sub("^t", "time", featureName)) %>%
mutate(featureName = sub("Acc", "acceleration", featureName)) %>%
mutate(featureName = sub("std", "standarddeviation", featureName)) %>%
mutate(featureName = tolower(featureName))
names(bigX) <- features_names
as_tibble(bigX)
names(bigX)
features_names
names(bigX) <- features_names$featureName
as_tibble(bigX)
bigX
activities <- factor(bigY)
activities
str(activities)
head(bigX)
source('C:/Users/David Cediel/Google Drive/UTP/Cursos aparte/Data Science/Curso 2 - Getting and Cleaning Data/Week 4 - Text vars, Regex and Dates/Project Tidy Data/run_analysis.R')
head(bigX)
names(bigX)
srsplit("hola", "x")
strplit("hola", "x")
strsplit("hola", "x")
strsplit(c("hola", "que"), "x")
strsplit(c("hola", "quexmas"), "x")
themes <- strsplit(features_names, "mean")
class(features_names)
themes <- strsplit(features_names$featureName, "mean")
themes
class(themes)
themes[1, ]
themes[, 1]
sapply(themes, function(X){X[1]})
#Eliminating the unnecesary part of 'standarddeviation'
themes <- strsplit(themes, "standarddeviation")
#Eliminating the unnecesary part of 'mean'
themes <- strsplit(features_names$featureName, "mean")
themes <- sapply(themes, function(X){X[1]})
class(themes)
nrow(themes)
themes
#Eliminating the unnecesary part of 'standarddeviation'
themes <- lapply(themes, strsplit, "standarddeviation")
themes
themes <- sapply(themes, function(X){X[1]})
themes
#Eliminating the unnecesary part of 'mean'
themes <- lappply(features_names$featureName, strsplit, "mean")
#Eliminating the unnecesary part of 'mean'
themes <- lapply(features_names$featureName, strsplit, "mean")
themes
themes <- sapply(themes, function(X){X[1]})
themes
themes[[52]]
themes[[53]]
class(themes[[53]])
themes[[53][1]]
themes[[53]][1]
#Eliminating the unnecesary part of 'mean'
themes <- lapply(features_names$featureName, strsplit, "mean")
themes <- sapply(themes, function(X){X[1]})
themes <- sapply(themes, function(X){X[1]})
themes
#Eliminating the unnecesary part of 'standarddeviation'
themes <- lapply(themes, strsplit, "standarddeviation")
themes <- sapply(themes, function(X){X[1]})
themes <- sapply(themes, function(X){X[1]})
themes}
themes
