version()
library(swirl)
swirl()
sapply(flags, unique)
?vapply
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
?table
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
x <- data("iris")
x
class(x)
?iris
class(iris)
colnames(iris)
colme+
q
colMeans(iris)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
sapply(iris, mean)
sapply(iris[:-1], mean)
sapply(iris[, 1:-1], mean)
sapply(iris[, -1], mean)
sapply(iris[-1], mean)
iris[-1]
iris[,-1]
iris[1:6,-1]
iris[1:6,-2]
iris[1:6, -1]
iris[1:6, -6]
iris[1:6, -5]
mean(iris[, -5], mean)
sapply(iris[, -5], mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data("mtcars")
class(mtcars)
colnames(mtcars)
sapply(mtcars, class)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
4cyl <- mtcars[mtcars$cyl == 4]
cyl_4 <- mtcars[mtcars$cyl == 4]
cyl_4 <- mtcars[,mtcars$cyl == 4]
cyl_4 <- mtcars[mtcars$cyl == 4,]
cyl_4
mean(cyl_4$hp)
hp_4cyl <- mean(cyl_4$hp)
cyl_8 <- mtcars[mtcars$cyl == 8, ]
hp_8cyl <- mean(cyl_8$hp)
hp_8cyl
abs(-2)
abs(hp_4cyl - hb_8cyl)
abs(hp_4cyl - hp_8cyl)
debug(ls)
ls
ls()
q
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
q
Q
Q
Q
sys.Date()
cars
write.csv(cars, file = "cars.csv")
dir()
getwd()
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="admin",
password = "admin")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="admin",
)
hg19 <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu", db = "hg19")
allTables <- dbListTables(hg19)
length(allTables)
object.size(allTables)
dbListFields(hg19, "affyU133Plus2")
query <- dbSendQuery(hg19, "select bin, qEnd from affyU133Plus2")
fetch(query, 10)
rm(list=ls())
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "f23ab37783ef8b24b0af",
secret = "dee09e2c921dc6cf57bf073ef6d7569d8f4b87a2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req2 <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req2)
x<- content(req2)
x
class(x)
x$created_at
x[[30]]
x[[30]]$created_at
req2 <- GET("https://api.github.com/users/jtleek/repos/datasharing", gtoken)
x<- content(req2)
x
req2 <- GET("https://api.github.com/users/jtleek/repos", gtoken)
x<- content(req2)
x
x$datasharing
print(repo)
for(repo in x){
print(repo)
}
for(repo in x){
print(repo$name)
}
for(repo in x){
if(repo$name == "datasharing")
print(repo$created_at)
}
source('C:/Users/David Cediel/Google Drive/UTP/Cursos aparte/Data Science/Curso 2 - Getting and Cleaning Data/Week 2 - Getting from mySQL, hdf5, web and apis/quiz.R')
install.packages("sqldf")
getwd()
setwd("C:\\Users\\David Cediel\\Google Drive\\UTP\\Cursos aparte\\Data Science\\Curso 2 - Getting and Cleaning Data\\Week 2 - Getting from mySQL, hdf5, web and apis
")
setwd("C:\\Users\\David Cediel\\Google Drive\\UTP\\Cursos aparte\\Data Science\\Curso 2 - Getting and Cleaning Data\\Week 2 - Getting from mySQL, hdf5, web and apis
")
stop_for_status(req)
setwd("C:\\Users\\David Cediel\\Google Drive\\UTP\\Cursos aparte\\Data Science\\Curso 2 - Getting and Cleaning Data\\Week 2 - Getting from mySQL, hdf5, web and apis
")
stop_for_status(req2)
setwd("C:\\Users\\David Cediel\\Google Drive\\UTP\\Cursos aparte\\Data Science\\Curso 2 - Getting and Cleaning Data\\Week 2 - Getting from mySQL, hdf5, web and apis
")
source('C:/Users/David Cediel/Google Drive/UTP/Cursos aparte/Data Science/Curso 2 - Getting and Cleaning Data/Week 4 - Text vars, Regex and Dates/Project Tidy Data/run_analysis.R')
setwd("C:\\Users\\David Cediel\\Google Drive\\UTP\\Cursos aparte\\Data Science\\Curso 2 - Getting and Cleaning Data\\Week 4 - Text vars, Regex and Dates\\Project Tidy Data")
rm(list = ls())
source('C:/Users/David Cediel/Google Drive/UTP/Cursos aparte/Data Science/Curso 2 - Getting and Cleaning Data/Week 4 - Text vars, Regex and Dates/Project Tidy Data/run_analysis.R')
dim(dataset)
file.size(dataset)
?file.size
nrow(bigY)
bigY
length(bigY)
write.csv(dataset, file = "./data/bigDataset.csv")
write.csv(means, file ="./data/means.csv")
object.size(dataset)
object.size(dataset) / (1024*1024)
object.size(dataset, unit = "Mb")
object.size(dataset, units = "Mb")
object.size(dataset, units = "Mb")
rm(list = ls())
source('C:/Users/David Cediel/Google Drive/UTP/Cursos aparte/Data Science/Curso 2 - Getting and Cleaning Data/Week 4 - Text vars, Regex and Dates/Project Tidy Data/run_analysis.R', echo=TRUE)
object.size(dataset, units = "Mb")
